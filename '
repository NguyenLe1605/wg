use env_logger::Builder;
use log::LevelFilter;
use std::io::Write;
// Log levels for use with NewLogger.
#[derive(Clone, Copy, PartialEq, Eq, Debug)]
pub enum LogLevel {
    Silent,
    Error,
    Verbose,
}

pub fn init_logger(level: LogLevel, prepend: &str) {
    let level = match level {
        LogLevel::Verbose => LevelFilter::Debug,
        LogLevel::Error => LevelFilter::Error,
        LogLevel::Silent => LevelFilter::Off,
    };
    Builder::new()
        .format(|buf, record| writeln!(buf, "{}: {}{}", record.level(), record.args(), prepend))
        .filter_level(level)
        .init();
}
